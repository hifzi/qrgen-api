{
  "name": "qrgen-api",
  "version": "1.2.0",
  "description": "A high-performance, enterprise-grade RESTful API for generating customizable QR codes with advanced features, security, and monitoring.",
  "main": "src/app.js",
  "scripts": {
    "start": "node src/app.js",
    "start:env": "dotenv -e .env node src/app.js",
    "dev": "nodemon src/app.js",
    "dev:basic": "nodemon src/app.js",
    "test": "jest --coverage",
    "test:watch": "jest --watch",
    "test:basic": "node test-api.js",
    "test:enhanced": "node test-enhanced.js",
    "lint": "eslint src/ --ext .js",
    "lint:fix": "eslint src/ --ext .js --fix",
    "format": "prettier --write src/**/*.js public/**/*.html",
    "build": "npm run lint && npm run test",
    "build:docker": "docker buildx build --platform linux/amd64,linux/arm64 -t hifzirs/qrgen-api:latest .",
    "cache:clear": "curl -X POST http://localhost:8080/api/cache/clear",
    "health:check": "curl http://localhost:8080/health",
    "docs:generate": "node scripts/generate-docs.js",
    "precommit": "npm run lint && npm run test"
  },
  "dependencies": {
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "helmet": "^7.1.0",
    "node-cache": "^5.1.2",
    "qrcode": "^1.5.3",
    "uuid": "^9.0.1",
    "validator": "^13.11.0",
    "xss": "^1.0.14"
  },
  "devDependencies": {
    "dotenv-cli": "^8.0.0",
    "eslint": "^8.55.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-security": "^1.7.1",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.1.0"
  },
  "keywords": [
    "qr-code",
    "generator",
    "express",
    "api",
    "enterprise",
    "high-performance",
    "security",
    "caching",
    "monitoring",
    "batch-processing",
    "rate-limiting",
    "docker",
    "microservice"
  ],
  "author": {
    "name": "Hifzi",
    "email": "hifzirs19@gmail.com",
    "url": "https://github.com/hifzi"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/hifzi/qrgen-api.git"
  },
  "bugs": {
    "url": "https://github.com/hifzi/qrgen-api/issues"
  },
  "homepage": "https://github.com/hifzi/qrgen-api#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/**/*.test.js",
      "!src/scripts/**"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "testMatch": [
      "**/__tests__/**/*.js",
      "**/?(*.)+(spec|test).js"
    ]
  },
  "eslintConfig": {
    "extends": [
      "airbnb-base",
      "plugin:security/recommended"
    ],
    "env": {
      "node": true,
      "jest": true
    },
    "rules": {
      "no-console": "warn",
      "security/detect-object-injection": "off",
      "import/no-extraneous-dependencies": [
        "error",
        {
          "devDependencies": [
            "**/*.test.js",
            "**/*.spec.js",
            "scripts/**/*.js"
          ]
        }
      ]
    }
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "es5",
    "tabWidth": 2,
    "semi": true,
    "printWidth": 100
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "config": {
    "performance": {
      "maxResponseTime": 100,
      "maxMemoryUsage": "512MB",
      "targetThroughput": 10000
    },
    "security": {
      "rateLimitWindow": 900000,
      "rateLimitMax": 100,
      "maxDataLength": 4000,
      "allowedOrigins": [
        "localhost",
        "127.0.0.1"
      ]
    },
    "cache": {
      "defaultTTL": 300,
      "maxKeys": 1000,
      "checkPeriod": 60
    }
  },
  "docker": {
    "image": "qrgen-api",
    "tag": "2.0.0",
    "ports": [
      "8080:8080"
    ],
    "environment": {
      "NODE_ENV": "production",
      "PORT": "8080"
    }
  },
  "monitoring": {
    "healthCheck": "/health",
    "metrics": "/metrics",
    "alerts": {
      "responseTime": "> 200ms",
      "errorRate": "> 1%",
      "memoryUsage": "> 80%"
    }
  }
}
